// Mocks generated by Mockito 5.4.5 from annotations
// in flutter_guidelines/test/unit_test/repositories/posts_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:dio/dio.dart' as _i2;
import 'package:flutter_guidelines/models/general_models.dart' as _i5;
import 'package:flutter_guidelines/services/index.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T1> extends _i1.SmartFake implements _i2.Response<T1> {
  _FakeResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFuture_1<T1> extends _i1.SmartFake implements _i3.Future<T1> {
  _FakeFuture_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [HttpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i4.HttpClient {
  @override
  _i3.Stream<_i5.AuthStatus> get authenticationStatus =>
      (super.noSuchMethod(
            Invocation.getter(#authenticationStatus),
            returnValue: _i3.Stream<_i5.AuthStatus>.empty(),
            returnValueForMissingStub: _i3.Stream<_i5.AuthStatus>.empty(),
          )
          as _i3.Stream<_i5.AuthStatus>);

  @override
  _i3.Future<void> setToken(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#setToken, [token]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> clearToken() =>
      (super.noSuchMethod(
            Invocation.method(#clearToken, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i2.Response<T>> getR<T>(
    String? url, {
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getR,
              [url],
              {#queryParameters: queryParameters, #options: options},
            ),
            returnValue: _i3.Future<_i2.Response<T>>.value(
              _FakeResponse_0<T>(
                this,
                Invocation.method(
                  #getR,
                  [url],
                  {#queryParameters: queryParameters, #options: options},
                ),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i2.Response<T>>.value(
              _FakeResponse_0<T>(
                this,
                Invocation.method(
                  #getR,
                  [url],
                  {#queryParameters: queryParameters, #options: options},
                ),
              ),
            ),
          )
          as _i3.Future<_i2.Response<T>>);

  @override
  _i3.Future<T> get<T>(
    String? url, {
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #get,
              [url],
              {#queryParameters: queryParameters, #options: options},
            ),
            returnValue:
                _i6.ifNotNull(
                  _i6.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #get,
                      [url],
                      {#queryParameters: queryParameters, #options: options},
                    ),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(
                  this,
                  Invocation.method(
                    #get,
                    [url],
                    {#queryParameters: queryParameters, #options: options},
                  ),
                ),
            returnValueForMissingStub:
                _i6.ifNotNull(
                  _i6.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #get,
                      [url],
                      {#queryParameters: queryParameters, #options: options},
                    ),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(
                  this,
                  Invocation.method(
                    #get,
                    [url],
                    {#queryParameters: queryParameters, #options: options},
                  ),
                ),
          )
          as _i3.Future<T>);

  @override
  _i3.Future<_i2.Response<T>> postR<T>(
    String? url, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #postR,
              [url],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
              },
            ),
            returnValue: _i3.Future<_i2.Response<T>>.value(
              _FakeResponse_0<T>(
                this,
                Invocation.method(
                  #postR,
                  [url],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i2.Response<T>>.value(
              _FakeResponse_0<T>(
                this,
                Invocation.method(
                  #postR,
                  [url],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i3.Future<_i2.Response<T>>);

  @override
  _i3.Future<T> post<T>(
    String? url, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
              },
            ),
            returnValue:
                _i6.ifNotNull(
                  _i6.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #post,
                      [url],
                      {
                        #data: data,
                        #queryParameters: queryParameters,
                        #options: options,
                      },
                    ),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(
                  this,
                  Invocation.method(
                    #post,
                    [url],
                    {
                      #data: data,
                      #queryParameters: queryParameters,
                      #options: options,
                    },
                  ),
                ),
            returnValueForMissingStub:
                _i6.ifNotNull(
                  _i6.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #post,
                      [url],
                      {
                        #data: data,
                        #queryParameters: queryParameters,
                        #options: options,
                      },
                    ),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(
                  this,
                  Invocation.method(
                    #post,
                    [url],
                    {
                      #data: data,
                      #queryParameters: queryParameters,
                      #options: options,
                    },
                  ),
                ),
          )
          as _i3.Future<T>);

  @override
  _i3.Future<_i2.Response<T>> putR<T>(
    String? url, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #putR,
              [url],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
              },
            ),
            returnValue: _i3.Future<_i2.Response<T>>.value(
              _FakeResponse_0<T>(
                this,
                Invocation.method(
                  #putR,
                  [url],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i2.Response<T>>.value(
              _FakeResponse_0<T>(
                this,
                Invocation.method(
                  #putR,
                  [url],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i3.Future<_i2.Response<T>>);

  @override
  _i3.Future<T> put<T>(
    String? url, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
              },
            ),
            returnValue:
                _i6.ifNotNull(
                  _i6.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #put,
                      [url],
                      {
                        #data: data,
                        #queryParameters: queryParameters,
                        #options: options,
                      },
                    ),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(
                  this,
                  Invocation.method(
                    #put,
                    [url],
                    {
                      #data: data,
                      #queryParameters: queryParameters,
                      #options: options,
                    },
                  ),
                ),
            returnValueForMissingStub:
                _i6.ifNotNull(
                  _i6.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #put,
                      [url],
                      {
                        #data: data,
                        #queryParameters: queryParameters,
                        #options: options,
                      },
                    ),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(
                  this,
                  Invocation.method(
                    #put,
                    [url],
                    {
                      #data: data,
                      #queryParameters: queryParameters,
                      #options: options,
                    },
                  ),
                ),
          )
          as _i3.Future<T>);

  @override
  _i3.Future<_i2.Response<T>> patchR<T>(
    String? url, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patchR,
              [url],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
              },
            ),
            returnValue: _i3.Future<_i2.Response<T>>.value(
              _FakeResponse_0<T>(
                this,
                Invocation.method(
                  #patchR,
                  [url],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i2.Response<T>>.value(
              _FakeResponse_0<T>(
                this,
                Invocation.method(
                  #patchR,
                  [url],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i3.Future<_i2.Response<T>>);

  @override
  _i3.Future<T> patch<T>(
    String? url, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [url],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
              },
            ),
            returnValue:
                _i6.ifNotNull(
                  _i6.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #patch,
                      [url],
                      {
                        #data: data,
                        #queryParameters: queryParameters,
                        #options: options,
                      },
                    ),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(
                  this,
                  Invocation.method(
                    #patch,
                    [url],
                    {
                      #data: data,
                      #queryParameters: queryParameters,
                      #options: options,
                    },
                  ),
                ),
            returnValueForMissingStub:
                _i6.ifNotNull(
                  _i6.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #patch,
                      [url],
                      {
                        #data: data,
                        #queryParameters: queryParameters,
                        #options: options,
                      },
                    ),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(
                  this,
                  Invocation.method(
                    #patch,
                    [url],
                    {
                      #data: data,
                      #queryParameters: queryParameters,
                      #options: options,
                    },
                  ),
                ),
          )
          as _i3.Future<T>);

  @override
  _i3.Future<_i2.Response<T>> deleteR<T>(
    String? url, {
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #deleteR,
              [url],
              {#queryParameters: queryParameters, #options: options},
            ),
            returnValue: _i3.Future<_i2.Response<T>>.value(
              _FakeResponse_0<T>(
                this,
                Invocation.method(
                  #deleteR,
                  [url],
                  {#queryParameters: queryParameters, #options: options},
                ),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i2.Response<T>>.value(
              _FakeResponse_0<T>(
                this,
                Invocation.method(
                  #deleteR,
                  [url],
                  {#queryParameters: queryParameters, #options: options},
                ),
              ),
            ),
          )
          as _i3.Future<_i2.Response<T>>);

  @override
  _i3.Future<T> delete<T>(
    String? url, {
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {#queryParameters: queryParameters, #options: options},
            ),
            returnValue:
                _i6.ifNotNull(
                  _i6.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #delete,
                      [url],
                      {#queryParameters: queryParameters, #options: options},
                    ),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(
                  this,
                  Invocation.method(
                    #delete,
                    [url],
                    {#queryParameters: queryParameters, #options: options},
                  ),
                ),
            returnValueForMissingStub:
                _i6.ifNotNull(
                  _i6.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #delete,
                      [url],
                      {#queryParameters: queryParameters, #options: options},
                    ),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(
                  this,
                  Invocation.method(
                    #delete,
                    [url],
                    {#queryParameters: queryParameters, #options: options},
                  ),
                ),
          )
          as _i3.Future<T>);

  @override
  _i3.Future<_i2.Response<dynamic>> download(String? url, String? savePath) =>
      (super.noSuchMethod(
            Invocation.method(#download, [url, savePath]),
            returnValue: _i3.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_0<dynamic>(
                this,
                Invocation.method(#download, [url, savePath]),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_0<dynamic>(
                this,
                Invocation.method(#download, [url, savePath]),
              ),
            ),
          )
          as _i3.Future<_i2.Response<dynamic>>);
}
