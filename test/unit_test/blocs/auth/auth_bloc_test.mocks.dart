// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_guidelines/test/unit_test/blocs/auth/auth_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dio/dio.dart' as _i8;
import 'package:flutter_guidelines/models/index.dart' as _i3;
import 'package:flutter_guidelines/repositories/auth_repository.dart' as _i5;
import 'package:flutter_guidelines/repositories/user_repository.dart' as _i7;
import 'package:flutter_guidelines/services/http/http_client.dart' as _i2;
import 'package:fresh_dio/fresh_dio.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHttpClient_0 extends _i1.SmartFake implements _i2.HttpClient {
  _FakeHttpClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserProfile_1 extends _i1.SmartFake implements _i3.UserProfile {
  _FakeUserProfile_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_2<T1> extends _i1.SmartFake implements _i4.Response<T1> {
  _FakeResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i5.AuthRepository {
  @override
  _i2.HttpClient get httpClient => (super.noSuchMethod(
        Invocation.getter(#httpClient),
        returnValue: _FakeHttpClient_0(
          this,
          Invocation.getter(#httpClient),
        ),
        returnValueForMissingStub: _FakeHttpClient_0(
          this,
          Invocation.getter(#httpClient),
        ),
      ) as _i2.HttpClient);

  @override
  _i6.Stream<_i4.AuthenticationStatus> get authenticationStatus =>
      (super.noSuchMethod(
        Invocation.getter(#authenticationStatus),
        returnValue: _i6.Stream<_i4.AuthenticationStatus>.empty(),
        returnValueForMissingStub: _i6.Stream<_i4.AuthenticationStatus>.empty(),
      ) as _i6.Stream<_i4.AuthenticationStatus>);

  @override
  _i6.Future<void> signIn(
    String? userName,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [
            userName,
            password,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i7.UserRepository {
  @override
  _i2.HttpClient get httpClient => (super.noSuchMethod(
        Invocation.getter(#httpClient),
        returnValue: _FakeHttpClient_0(
          this,
          Invocation.getter(#httpClient),
        ),
        returnValueForMissingStub: _FakeHttpClient_0(
          this,
          Invocation.getter(#httpClient),
        ),
      ) as _i2.HttpClient);

  @override
  _i6.Future<_i3.UserProfile> getUserProfile() => (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [],
        ),
        returnValue: _i6.Future<_i3.UserProfile>.value(_FakeUserProfile_1(
          this,
          Invocation.method(
            #getUserProfile,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.UserProfile>.value(_FakeUserProfile_1(
          this,
          Invocation.method(
            #getUserProfile,
            [],
          ),
        )),
      ) as _i6.Future<_i3.UserProfile>);
}

/// A class which mocks [HttpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i2.HttpClient {
  @override
  _i6.Stream<_i4.AuthenticationStatus> get authenticationStatus =>
      (super.noSuchMethod(
        Invocation.getter(#authenticationStatus),
        returnValue: _i6.Stream<_i4.AuthenticationStatus>.empty(),
        returnValueForMissingStub: _i6.Stream<_i4.AuthenticationStatus>.empty(),
      ) as _i6.Stream<_i4.AuthenticationStatus>);

  @override
  _i6.Future<void> setToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #setToken,
          [token],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> clearToken() => (super.noSuchMethod(
        Invocation.method(
          #clearToken,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i4.Response<T>> get<T>(
    String? url, {
    Map<String, dynamic>? queryParameters,
    _i8.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {
            #queryParameters: queryParameters,
            #options: options,
          },
        ),
        returnValue: _i6.Future<_i4.Response<T>>.value(_FakeResponse_2<T>(
          this,
          Invocation.method(
            #get,
            [url],
            {
              #queryParameters: queryParameters,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.Response<T>>.value(_FakeResponse_2<T>(
          this,
          Invocation.method(
            #get,
            [url],
            {
              #queryParameters: queryParameters,
              #options: options,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<T>>);

  @override
  _i6.Future<_i4.Response<T>> post<T>(
    String? url, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i8.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
          },
        ),
        returnValue: _i6.Future<_i4.Response<T>>.value(_FakeResponse_2<T>(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.Response<T>>.value(_FakeResponse_2<T>(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<T>>);

  @override
  _i6.Future<_i4.Response<T>> put<T>(
    String? url, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i8.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
          },
        ),
        returnValue: _i6.Future<_i4.Response<T>>.value(_FakeResponse_2<T>(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.Response<T>>.value(_FakeResponse_2<T>(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<T>>);

  @override
  _i6.Future<_i4.Response<T>> patch<T>(
    String? url, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i8.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
          },
        ),
        returnValue: _i6.Future<_i4.Response<T>>.value(_FakeResponse_2<T>(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.Response<T>>.value(_FakeResponse_2<T>(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<T>>);

  @override
  _i6.Future<_i4.Response<T>> delete<T>(
    String? url, {
    Map<String, dynamic>? queryParameters,
    _i8.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #queryParameters: queryParameters,
            #options: options,
          },
        ),
        returnValue: _i6.Future<_i4.Response<T>>.value(_FakeResponse_2<T>(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #queryParameters: queryParameters,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.Response<T>>.value(_FakeResponse_2<T>(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #queryParameters: queryParameters,
              #options: options,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<T>>);

  @override
  _i6.Future<_i4.Response<dynamic>> download(
    String? url,
    String? savePath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            url,
            savePath,
          ],
        ),
        returnValue:
            _i6.Future<_i4.Response<dynamic>>.value(_FakeResponse_2<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              url,
              savePath,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.Response<dynamic>>.value(_FakeResponse_2<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              url,
              savePath,
            ],
          ),
        )),
      ) as _i6.Future<_i4.Response<dynamic>>);
}
